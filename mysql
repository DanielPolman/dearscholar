# Copyright (c) 2020 P.M. Kruyen, Institute for Management Research, Radboud University, the Netherlands. 

# MYSQL database initialization for DearScholar. Consult the installation instructions in the README file for details. In particular, the information about when Part 1 and Part 2 should be run during installation.

#---
# Part 1
#---

# MYSQL database setup for respondents

CREATE DATABASE IF NOT EXISTS respondents
	 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;

# MYSQL table setup (for managing respondents and sending push notifications)

USE respondents;

CREATE TABLE IF NOT EXISTS authentication (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	pwd TEXT,
	project TEXT,
	setup VARCHAR(1) ,
	q0_startdate TEXT,
	q0_occasions TEXT,
	q0_intervaltype TEXT,
	q0_interval TEXT);

CREATE TABLE IF NOT EXISTS registration (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	project TEXT,   	
	uname VARCHAR(100),
	token TEXT);

# MYSQL database setup for the project.
# Note, if you want to run multiple projects, you can run the code below multiple times, but do not forget to change the database name.

CREATE DATABASE IF NOT EXISTS project
	 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;

# MYSQL table setup for the project.

USE project;
	
CREATE TABLE `pintable` (
  `id` int(11) NOT NULL,
  `uname` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `pin` text COLLATE utf8mb4_unicode_ci,
  `code` text COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `surveyStructure` (
  `consent` text COLLATE utf8mb4_unicode_ci,
  `manual` text COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `moduleStructure` (
  `id` int(11) NOT NULL,
  `module0` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `page` varchar(1) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `mandatory` varchar(1) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `image` text COLLATE utf8mb4_unicode_ci,
  `imageleft` varchar(5) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `imagetop` varchar(5) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `pageStructure` (
  `id` int(11) NOT NULL,
  `module1` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `classp` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `idp` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `header` text CHARACTER SET utf8,
  `backbuttontid` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `backbuttontext` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `backbuttononclick` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `backbuttonhref` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `nextbuttonid` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `nextbuttontext` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `nextbuttononclick` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `nextbuttonhref` varchar(100) CHARACTER SET utf8 DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `questionTable` (
  `id` int(11) NOT NULL,
  `module2` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tab` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `idq` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `type` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `question` text COLLATE utf8mb4_unicode_ci,
  `categories` text COLLATE utf8mb4_unicode_ci,
  `footer` text COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

# MYSQL table setup (in app messages)

CREATE TABLE `messages` (
  `id` int(11) NOT NULL,
  `uname` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `timestamp` text COLLATE utf8mb4_unicode_ci,
  `message` text COLLATE utf8mb4_unicode_ci,
  `seen` varchar(1) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

# MYSQL table setup (in app messages)

CREATE TABLE IF NOT EXISTS messages (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100),
   	timestamp TEXT,
   	message TEXT,
	seen VARCHAR(1));

#---
# Part 2
#---
	
# MYSQL table setup (response tables)
# Warning: Set up these tables only after the questionTable has been populated. # Warning: See samplestudy-part2.sql for a mock survey.
# Warning: When new questions are added to the questionTable afterwards (or question IDs have changed), add new response columns for these questions manually to the table. 

# Note: In the source code, we have 7 modules (A, B, C, D, E, F, G) and, hence 7 responseTables. 

# Code adapted from https://stackoverflow.com/users/833073/fthiella
# https://stackoverflow.com/questions/15820082/create-a-table-with-column-names-derived-from-row-values-of-another-table

CREATE TABLE IF NOT EXISTS responseTableModuleA (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleA ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'A'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

CREATE TABLE IF NOT EXISTS responseTableModuleB (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleB ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'B'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

CREATE TABLE IF NOT EXISTS responseTableModuleC (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleC ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'C'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

CREATE TABLE IF NOT EXISTS responseTableModuleD (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleD ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'D'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

CREATE TABLE IF NOT EXISTS responseTableModuleE (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleE ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'E'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

CREATE TABLE IF NOT EXISTS responseTableModuleF (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleF ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'F'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

CREATE TABLE IF NOT EXISTS responseTableModuleG (
	id int NOT NULL AUTO_INCREMENT PRIMARY KEY, 
   	uname VARCHAR(100) ,
   	timestamp TEXT,
   	surveydate TEXT);

SELECT
  CONCAT(
    'ALTER TABLE responseTableModuleG ADD COLUMN (', 
    GROUP_CONCAT(DISTINCT
      CONCAT(idq, ' TEXT')
      SEPARATOR ','),
    ');')
FROM
  questionTable WHERE module2 = 'G'
INTO @sql;

PREPARE stmt FROM @sql;
EXECUTE stmt;

# MYSQL user management

##  INDIVIDUAL RESEARCHER
CREATE USER ‘######’@‘localhost' IDENTIFIED BY '######';

	### TO MANIPULATE THE REGISTRATION OF RESPONDENTS
	GRANT INSERT, SELECT, UPDATE ON project. authentication TO '######'@'localhost';

	### TO MANIPULATE  THE SURVEY SETUP
	GRANT INSERT, SELECT, DELETE, UPDATE ON project. surveyStructure TO '######'@'localhost';
	GRANT INSERT, SELECT, DELETE, UPDATE ON project. moduleStructure TO '######'@'localhost';
	GRANT INSERT, SELECT, DELETE, UPDATE ON project. pageStructure TO '######'@'localhost';
	GRANT INSERT, SELECT, DELETE, UPDATE ON project. questionTable TO '######'@'localhost';

	### TO MANIPULATE THE MESSAGES TABLE
	GRANT INSERT, SELECT, DELETE, UPDATE ON project. messages TO '######'@'localhost';

	### TO VIEW THE RESULTS OF THE SURVEY
	GRANT SELECT ON project. responseTableModuleA TO '######'@'localhost';
	GRANT SELECT ON project. responseTableModuleB TO '######'@'localhost';
	GRANT SELECT ON project. responseTableModuleC TO '######'@'localhost';
	GRANT SELECT ON project. responseTableModuleD TO '######'@'localhost';
	GRANT SELECT ON project. responseTableModuleE TO '######'@'localhost';
	GRANT SELECT ON project. responseTableModuleF TO '######'@'localhost';
	GRANT SELECT ON project. responseTableModuleG TO '######'@'localhost';

## RESPONDENT AKA ENDUSER IN DEARSCHOLAR (THAT IS, THE APP)
CREATE USER ‘######’@‘localhost' IDENTIFIED BY '######';
	
	### TO VERIFY THE CREDENTIALS AND SET THE SETUP VALUE TO ONE (1)
	GRANT SELECT, UPDATE ON project. authentication TO '######'@'localhost';

	### TO REGISTER THE DEVICE FOR RECEIVING PUSH NOTIFICATIONS (AND UPDATE WHEN APPLE OR ANDROID PROVIDES A NEW TOKEN
	GRANT SELECT, UPDATE ON project. registration TO '######'@'localhost';
	
	# TO MANIPULATE THE PIN CODE
	GRANT INSERT, SELECT, UPDATE ON project. pintable TO '######'@'localhost';
	
	# READ THE SURVEY SETUP
	GRANT SELECT ON project. surveyStructure TO '######'@'localhost';
	GRANT SELECT ON project. moduleStructure TO '######'@'localhost';
	GRANT SELECT ON project. pageStructure TO '######'@'localhost';
	GRANT SELECT ON project. questionTable TO '######'@'localhost';
	
	# READ MESSAGES AND SET THE READ VALUE TO ONE (1)
	GRANT SELECT, UPDATE ON project. questionTable TO '######'@'localhost';

	# INSERT (POST) THE DATA (SURVEY RESULTS
	GRANT INSERT ON project. responseTableModuleA TO '######'@'localhost';
	GRANT INSERT ON project. responseTableModuleB TO '######'@'localhost’;
	GRANT INSERT ON project. responseTableModuleC TO '######'@'localhost';
	GRANT INSERT ON project. responseTableModuleD TO '######'@'localhost';
	GRANT INSERT ON project. responseTableModuleE TO '######'@'localhost';
	GRANT INSERT ON project. responseTableModuleF TO '######'@'localhost';
	GRANT INSERT ON project. responseTableModuleG TO '######'@'localhost';


